import { HTTP_METHOD, ROUTES } from '@/app/_config'

import { Metadata } from 'next'

const { STRAPI_HOST, STRAPI_TOKEN } = process.env

export function fetchStrapiQuery<T>(url: string): Promise<T> {
  return fetch(`${STRAPI_HOST}${url}`, {
    headers: {
      Authorization: `Bearer ${STRAPI_TOKEN}`,
    },
    method: HTTP_METHOD.GET,
  }).then((res) => res.json())
}

export async function generateMetadata(): Promise<Metadata> {
  const { data: global } = await fetch(
    `${STRAPI_HOST}${ROUTES.STRAPRI.GLOBAL()}`,
    {
      headers: {
        Authorization: `Bearer ${STRAPI_TOKEN}`,
      },
    },
  ).then((res) => res.json())
  const TITLE_APP = 'Create Next App'
  const DESCRIPTION_APP = 'Generated by create next app'

  return {
    title: global.siteName || TITLE_APP,
    description: global.siteDescription || DESCRIPTION_APP,
    icons: ROUTES.STRAPRI.IMAGE_URL(global.favicon.url) || '/favicon.ico',
  }
}
